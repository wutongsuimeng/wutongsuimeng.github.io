<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>运维 on 梧桐碎梦</title>
    <link>https://wutongsuimeng.github.io/categories/%E8%BF%90%E7%BB%B4/</link>
    <description>Recent content in 运维 on 梧桐碎梦</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 11 Oct 2021 23:59:00 +0800</lastBuildDate><atom:link href="https://wutongsuimeng.github.io/categories/%E8%BF%90%E7%BB%B4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ELK Stack(Elasticsearch、Kibana、Beats 和 Logstash)搭建日志收集系统</title>
      <link>https://wutongsuimeng.github.io/post/elk-stackelasticsearchkibanabeats-%E5%92%8C-logstash%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Mon, 11 Oct 2021 23:59:00 +0800</pubDate>
      
      <guid>https://wutongsuimeng.github.io/post/elk-stackelasticsearchkibanabeats-%E5%92%8C-logstash%E6%90%AD%E5%BB%BA/</guid>
      <description>&lt;p&gt;Elasticsearch用于搜索、分析数据。&lt;/p&gt;
&lt;p&gt;Kibana用于展示数据。&lt;/p&gt;
&lt;p&gt;Beats用于收集数据。&lt;/p&gt;
&lt;p&gt;Logstash用于集中、转换和存储数据。&lt;/p&gt;
&lt;p&gt;日志的主要处理流程为下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wutongsuimeng.github.io/media/ELK%20Stack(Elasticsearch%E3%80%81Kibana%E3%80%81Beats%20%E5%92%8C%20Logstash)%E6%90%AD%E5%BB%BA%208aaac5c86012479a8765cbad898592c3/Untitled.png&#34; alt=&#34;ELK%20Stack(Elasticsearch%E3%80%81Kibana%E3%80%81Beats%20%E5%92%8C%20Logstash)%E6%90%AD%E5%BB%BA%208aaac5c86012479a8765cbad898592c3/Untitled.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自动化构建一个Go项目</title>
      <link>https://wutongsuimeng.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AAgo%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Mon, 11 Oct 2021 23:58:53 +0800</pubDate>
      
      <guid>https://wutongsuimeng.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AAgo%E9%A1%B9%E7%9B%AE/</guid>
      <description>&lt;p&gt;承接上文，本文使用jenkins和gitlab来实现Go项目的自动化部署。&lt;/p&gt;
&lt;h1 id=&#34;安装go&#34;&gt;安装Go&lt;/h1&gt;
&lt;p&gt;因为国内网络原因，无法直接通过jenkins从golang.org上直接下载安装go，这里使用自定义下载go安装包。&lt;/p&gt;
&lt;p&gt;首先在jenkins安装go插件 &lt;code&gt;Go Plugin&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后去全局工具配置，配置go。选择&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wutongsuimeng.github.io/media/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AAGo%E9%A1%B9%E7%9B%AE%20a33f3d749c6b498590233d83b22e797b/Untitled.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;
&lt;p&gt;别名这里选择填go，也可以别的。&lt;/p&gt;
&lt;p&gt;标签可以不填。&lt;/p&gt;
&lt;p&gt;压缩包(二进制)的下载URL填了：&lt;a href=&#34;https://golang.google.cn/dl/go1.17.1.linux-amd64.tar.gz&#34;&gt;https://golang.google.cn/dl/go1.17.1.linux-amd64.tar.gz&lt;/a&gt;，这是go国内的下载方式。&lt;/p&gt;
&lt;p&gt;解压目录选择了默认目录：/var/jenkins_home/tools/org.jenkinsci.plugins.golang.GolangInstallation&lt;/p&gt;
&lt;p&gt;最后go会安装在 &lt;code&gt;解压目录/go/别名/&lt;/code&gt; 下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wutongsuimeng.github.io/media/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AAGo%E9%A1%B9%E7%9B%AE%20a33f3d749c6b498590233d83b22e797b/Untitled%201.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gitlab、jenkins搭建自动化运维</title>
      <link>https://wutongsuimeng.github.io/post/gitlabjenkins%E6%90%AD%E5%BB%BA%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/</link>
      <pubDate>Mon, 11 Oct 2021 23:56:56 +0800</pubDate>
      
      <guid>https://wutongsuimeng.github.io/post/gitlabjenkins%E6%90%AD%E5%BB%BA%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/</guid>
      <description>&lt;p&gt;gitlab是一个代码管理项目，使用git作为管理工具。其实gitlab本身就集成了一套CI/CD流程，但是这里选择搭配更为简单的jenkins作为CI/CD。&lt;/p&gt;
&lt;p&gt;jenkins是一个支持自动化构建、部署和测试的软件，并且提供了众多的插件。jenkins可以选择多种方式安装，这里选择使用docker。&lt;/p&gt;
&lt;p&gt;服务器地址分别为：&lt;/p&gt;
&lt;p&gt;gitlab: 192.168.1.0:9080&lt;/p&gt;
&lt;p&gt;jenkins: 192.168.1.0:9081&lt;/p&gt;
&lt;p&gt;部署机器: 192.168.1.1&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
