<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on 梧桐碎梦</title>
    <link>https://wutongsuimeng.github.io/categories/spring/</link>
    <description>Recent content in Spring on 梧桐碎梦</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 14 Aug 2022 16:08:23 +0800</lastBuildDate><atom:link href="https://wutongsuimeng.github.io/categories/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>bean的创建过程分析</title>
      <link>https://wutongsuimeng.github.io/post/bean%E7%9A%84%E5%88%9B%E5%BB%BA%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 14 Aug 2022 16:08:23 +0800</pubDate>
      
      <guid>https://wutongsuimeng.github.io/post/bean%E7%9A%84%E5%88%9B%E5%BB%BA%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;既然是源码分析，那最好的办法还是编写一个测试用例，然后 debug 来看程序是怎样运行的。
测试例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;  
    ApplicationContext context&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; AnnotationConfigApplicationContext&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TestConfiguration&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;  
    TestBean tb&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TestBean&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; context&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBean&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;testBean&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;  
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Configuration&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TestConfiguration&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;  
    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;testBean&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Scope&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prototype&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; TestBean &lt;span style=&#34;color:#a6e22e&#34;&gt;testBean&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;  
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; TestBean&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;  
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;  
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>后端接收表单方式上传的文件和数据</title>
      <link>https://wutongsuimeng.github.io/post/%E5%90%8E%E7%AB%AF%E6%8E%A5%E6%94%B6%E8%A1%A8%E5%8D%95%E6%96%B9%E5%BC%8F%E4%B8%8A%E4%BC%A0%E7%9A%84%E6%96%87%E4%BB%B6%E5%92%8C%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Thu, 14 Apr 2022 22:38:44 +0800</pubDate>
      
      <guid>https://wutongsuimeng.github.io/post/%E5%90%8E%E7%AB%AF%E6%8E%A5%E6%94%B6%E8%A1%A8%E5%8D%95%E6%96%B9%E5%BC%8F%E4%B8%8A%E4%BC%A0%E7%9A%84%E6%96%87%E4%BB%B6%E5%92%8C%E6%95%B0%E6%8D%AE/</guid>
      <description>&lt;p&gt;通过 Postman 上传多个文件和数据，后端接收文件和数据。&lt;/p&gt;
&lt;h2 id=&#34;后端&#34;&gt;后端&lt;/h2&gt;
&lt;p&gt;因为 Postman 是通过表单方式上传，所以需要通过 &lt;code&gt;@RequestParam&lt;/code&gt; 注解接收文件，&lt;code&gt;value&lt;/code&gt; 属性定义请求参数，&lt;code&gt;required&lt;/code&gt; 定义该参数是否必须，默认为 &lt;code&gt;true&lt;/code&gt;。
上传文件需要使用 &lt;code&gt;MultipartFile&lt;/code&gt; 对象来接收，因为允许上传多个文件，所以使用了数组的形式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>系统集成Nacos和Feign</title>
      <link>https://wutongsuimeng.github.io/post/%E7%B3%BB%E7%BB%9F%E9%9B%86%E6%88%90nacos%E5%92%8Cfeign/</link>
      <pubDate>Sun, 27 Feb 2022 16:12:44 +0800</pubDate>
      
      <guid>https://wutongsuimeng.github.io/post/%E7%B3%BB%E7%BB%9F%E9%9B%86%E6%88%90nacos%E5%92%8Cfeign/</guid>
      <description>&lt;p&gt;nacos 是用于构建、交付和管理微服务的平台，支持服务发现与配置管理。&lt;/p&gt;
&lt;p&gt;Feign 是 Java 语言的 HTTP 客户端，通过接口与注解的方式来创建一个 Feign。&lt;/p&gt;
&lt;h1 id=&#34;引入依赖&#34;&gt;引入依赖&lt;/h1&gt;
&lt;p&gt;因为nacos默认使用的均衡负载组件为ribbon，而OpenFeign最新版本默认使用的是spring cloud loadbalancer，所以我们需要排除ribbon依赖，并引入spring cloud loadbalancer依赖。&lt;/p&gt;
&lt;p&gt;因为nacos支持配置管理，所以需要引入spring cloud starter bootstrap依赖。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- pom.xml --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;java.version&amp;gt;&lt;/span&gt;1.8&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/java.version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;spring.boot.version&amp;gt;&lt;/span&gt;2.4.2&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/spring.boot.version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;spring.cloud.version&amp;gt;&lt;/span&gt;3.0.1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/spring.cloud.version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${spring.boot.version}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.alibaba.cloud&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2021.1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;exclusions&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--//丢弃ribbon--&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;exclusion&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.netflix.ribbon&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;ribbon&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/exclusion&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/exclusions&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-starter-openfeign&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${spring.cloud.version}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-starter-bootstrap&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${spring.cloud.version}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-cloud-loadbalancer&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${spring.cloud.version}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在使用nacos时需要注意nacos及其依赖的版本。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过依赖分析，发现nacos的2021.1版本引入的spring cloud版本为3.0.1，所以openfeign、bootstrap、loadbalancer等spring cloud组件的版本也需要为3.0.1。版本不符合的话会因冲突而报错。&lt;/li&gt;
&lt;li&gt;因为nacos的2021.1版本支持的spring boot版本为2.4.2，所以引入的spring boot组件的版本也需要为2.4.2。具体版本可查看&lt;a href=&#34;https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E&#34;&gt;版本说明&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>集成nacos和feign时报错java.lang.ClassNotFoundException: org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties</title>
      <link>https://wutongsuimeng.github.io/post/%E9%9B%86%E6%88%90nacos%E5%92%8Cfeign%E6%97%B6%E6%8A%A5%E9%94%99java.lang.classnotfoundexception-org.springframework.cloud.client.loadbalancer.loadbalancerclientsproperties/</link>
      <pubDate>Wed, 16 Feb 2022 11:35:36 +0800</pubDate>
      
      <guid>https://wutongsuimeng.github.io/post/%E9%9B%86%E6%88%90nacos%E5%92%8Cfeign%E6%97%B6%E6%8A%A5%E9%94%99java.lang.classnotfoundexception-org.springframework.cloud.client.loadbalancer.loadbalancerclientsproperties/</guid>
      <description>&lt;p&gt;今天在尝试集成nacos和feign时，报错：
&lt;code&gt;java.lang.ClassNotFoundException: org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;通过idea的Add Maven dependency功能，发现这个类位于 &lt;code&gt;spring-cloud-commons&lt;/code&gt;包内。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wutongsuimeng.github.io/media/Pasted%20image%2020220216113850.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是通过解压所引入的&lt;code&gt;spring-cloud-commons&lt;/code&gt;的jar包，发现是存在该类的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wutongsuimeng.github.io/media/Pasted%20image%2020220216115557.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以猜测可能是版本问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SpringBoot项目的配置文件中设置server.port不生效</title>
      <link>https://wutongsuimeng.github.io/post/springboot%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E8%AE%BE%E7%BD%AEserver.port%E4%B8%8D%E7%94%9F%E6%95%88/</link>
      <pubDate>Tue, 15 Feb 2022 14:15:03 +0800</pubDate>
      
      <guid>https://wutongsuimeng.github.io/post/springboot%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E8%AE%BE%E7%BD%AEserver.port%E4%B8%8D%E7%94%9F%E6%95%88/</guid>
      <description>&lt;p&gt;我的配置文件为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# application.yml&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;server&lt;/span&gt;:  
  &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8081&lt;/span&gt;  
&lt;span style=&#34;color:#f92672&#34;&gt;spring&lt;/span&gt;:  
  &lt;span style=&#34;color:#f92672&#34;&gt;application&lt;/span&gt;:  
    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;test  &lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;cloud&lt;/span&gt;:  
      &lt;span style=&#34;color:#f92672&#34;&gt;nacos&lt;/span&gt;:  
        &lt;span style=&#34;color:#f92672&#34;&gt;discovery&lt;/span&gt;:  
          &lt;span style=&#34;color:#f92672&#34;&gt;server-addr&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://localhost:8848&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;设置了 &lt;code&gt;server.port&lt;/code&gt;不生效的原因是因为没有引入nacos依赖，但是却写上了nacos的配置，所以删掉nacos的配置即可。&lt;/p&gt;
&lt;p&gt;修改后的配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# application.yml&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;server&lt;/span&gt;:  
  &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8081&lt;/span&gt;  
&lt;span style=&#34;color:#f92672&#34;&gt;spring&lt;/span&gt;:  
  &lt;span style=&#34;color:#f92672&#34;&gt;application&lt;/span&gt;:  
    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;test &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果需要使用nacos，在application.yml文件中配置&lt;code&gt;server.port&lt;/code&gt;的话，会发现配置不生效。这个时候需要新建一个空白的application.properties文件，来使的application.yml文件中的&lt;code&gt;server.port&lt;/code&gt;配置生效。原因未知。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用spring cloud，nacos，dubbo，gateway搭建微服务</title>
      <link>https://wutongsuimeng.github.io/post/%E4%BD%BF%E7%94%A8spring-cloudnacosdubbogateway%E6%90%AD%E5%BB%BA%E5%BE%AE%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Sun, 10 Oct 2021 21:16:29 +0800</pubDate>
      
      <guid>https://wutongsuimeng.github.io/post/%E4%BD%BF%E7%94%A8spring-cloudnacosdubbogateway%E6%90%AD%E5%BB%BA%E5%BE%AE%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;p&gt;本文使用spring cloud，nacos，dubbo，gateway搭建微服务&lt;/p&gt;
&lt;h1 id=&#34;启动nacos&#34;&gt;启动nacos&lt;/h1&gt;
&lt;p&gt;nacos是阿里开源的一个组件，用于服务发现、注册中心与配置中心。&lt;/p&gt;
&lt;p&gt;首先下载nacos server：&lt;a href=&#34;https://github.com/alibaba/nacos&#34;&gt;https://github.com/alibaba/nacos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;解压压缩包，打开bin目录。因为直接启动的话，会以集群模式启动，单机下会报错。所以有三种方法解决:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用命令行启动，指定为单机模式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;startup.cmd -m standalone
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改startup.cmd文件，将其修改为单机模式：&lt;/p&gt;
&lt;p&gt;将&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;set MODE=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cluster&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;修改为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;rem set MODE=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cluster&amp;#34;&lt;/span&gt;
set MODE=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;standalone&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注： &lt;code&gt;rem&lt;/code&gt;为注释语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以去修改数据库配置，感觉太麻烦了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;建议第一种。&lt;/p&gt;
&lt;p&gt;然后便能直接启动。&lt;/p&gt;
&lt;p&gt;web页面地址为：&lt;a href=&#34;http://localhost:8848/nacos/index.html&#34;&gt;http://localhost:8848/nacos/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;默认账号密码都是nacos&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gRPC的使用</title>
      <link>https://wutongsuimeng.github.io/post/grpc%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 13 Jun 2021 15:36:18 +0800</pubDate>
      
      <guid>https://wutongsuimeng.github.io/post/grpc%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;grpc是由google开源的rpc（Remote Procedure Call，远程程序调用）框架，rpc用于跨平台、跨语言传输数据。&lt;/p&gt;
&lt;p&gt;grpc采用的是http2协议。&lt;/p&gt;
&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;
&lt;h2 id=&#34;项目结构&#34;&gt;项目结构&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://wutongsuimeng.github.io/media/grpc%206dc0246e96bb4264a82fa800e38e0102/Untitled.png&#34; alt=&#34;grpc%206dc0246e96bb4264a82fa800e38e0102/Untitled.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;分别为client（客户端）、grpc（gRPC 服务）、server（服务端）。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
